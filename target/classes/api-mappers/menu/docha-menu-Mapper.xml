<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.ohdocha.admin.mapper.DochaAdminMenuMapper">

    <select id="selectMenuInfoList" parameterType="menuRequest"	resultType="menuResponse">
	    <![CDATA[
	    	SELECT
			 			DISTINCT	
						T1.MENU_CD  AS MENU_CD   													/* 메뉴코드 */ 
					,	T1.MENU_NM  AS MENU_NM   													/* 메뉴명  */ 
					,	T1.MENU_URL AS MENU_URL  													/* 메뉴경로 */
					,	T1.UPPER_MENU_CD AS UPPER_MENU_CD											/* 부모번호 */ 
-- 					,	LTRIM (GROUP_CONCAT (T1.MENU_NM separator ' > ')) AS DEPTH_FULLNAME	/*전체 메뉴 경로*/
					,	IFNULL(T1.USE_YN, 'N') AS USE_YN  												/* 메뉴코드 사용여부 */
					,	T2.NEW_YN			AS NEW_YN												/* 등록권한여부 1 사용 0 미사용*/	  
					,	T2.READ_YN			AS READ_YN												/* 읽기권한여부 1 사용 0 미사용*/
					,	T2.DEL_YN 			AS DEL_YN												/* 삭제권한여부 1 사용 0 미사용*/
					,	T2.EXCELDOWN_YN	AS EXCELDOWN_YN												/* 엑셀다운권한여부 1 사용 0 미사용*/
					,	T1.MENU_ORDER		AS MENU_ORDER											/* ORDER BY 순서*/
					,	T1.MENU_DC			AS MENU_DC												/* 메뉴 설명*/
					,	T1.MENU_LEVEL  AS MENU_LEVEL												/* 메뉴 LEVEL*/
			FROM DC_MENU T1
			LEFT JOIN DC_MENU_TEMPLATE T2
       			   ON T1.MENU_CD = T2.MENU_CD
			LEFT JOIN DC_MENU_AUTH T3
       			   ON T2.ROLE = T3.ROLE
	    ]]>
	    <trim prefix="WHERE" prefixOverrides="AND|OR">
					   T1.USE_YN='Y'
				   AND T2.READ_YN='Y'
			<if test="userRole != null and userRole != ''">
				   AND T3.ROLE=#{userRole}
			</if>
	    </trim>
    </select>

    <select id="selectMenuTemplateList" parameterType="menuRequest"	resultType="menuResponse">
		<![CDATA[
				SELECT 
						  	   IFNULL(TEMPLATE_CD   , '') AS TEMPLATE_CD    /*템플릿코드*/
							,  IFNULL(TEMPLATE_NM   , '') AS TEMPLATE_NM    /*템플릿명*/
							,  IFNULL(TEMPLATE_MEMO , '') AS TEMPLATE_MEMO  /*템플릿설명*/
							,  IFNULL(REG_DT        , '') AS REG_DT         /*등록일*/
							,  IFNULL(REG_ID        , '') AS REG_ID         /*등록자*/
							,  IFNULL(MOD_DT        , '') AS MOD_DT         /*수정자*/
							,  IFNULL(MOD_ID        , '') AS MOD_ID         /*수정자*/
							,  IFNULL(ROLE          , '') AS ROLE           /**/
				  FROM DC_MENU_TEMPLATE
                      ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
        	<if test="templateCd != null and templateCd != ''">
	        	<![CDATA[ AND TEMPLATE_CD =#{templateCd}        ]]>
       		</if>
       		<if test="templateNm != null and templateNm != ''">
	        <![CDATA[ AND  TEMPLATE_NM= #{templateNm}   ]]>
	        </if>       		
		</trim>			
    </select>
    
	<select id="selectMenuInfoAll" parameterType="menuRequest"	resultType="menuResponse">
		<![CDATA[
				SELECT 
						  IFNULL(A.MENU_CD, '')  AS MENU_CD   											/* 메뉴코드 */
						, IFNULL(A.MENU_NM, '')  AS MENU_NM   											/* 메뉴명  */
						, IFNULL(A.MENU_URL, '') AS MENU_URL  											/* 메뉴경로 */
						, IFNULL(A.UPPER_MENU_CD , '0') AS UPPER_MENU_CD								/* 부모번호 */
 						, LTRIM (SYS_CONNECT_BY_PATH (A.MENU_NM, ' > '), ' > ') AS DEPTH_FULLNAME	/*전체 메뉴 경로*/ 
						, IFNULL(A.USE_YN, '') AS USE_YN  												/* 메뉴코드 사용여부 */
	                    , B.NEW_YN			AS NEW_YN												/* 등록권한여부 1 사용 0 미사용*/	  
	                    , B.READ_YN			AS READ_YN												/* 읽기권한여부 1 사용 0 미사용*/
	                    , B.DEL_YN 			AS DEL_YN												/* 삭제권한여부 1 사용 0 미사용*/
	                    , B.EXCELDOWN_YN	AS EXCELDOWN_YN											/* 엑셀다운권한여부 1 사용 0 미사용*/
	                    , A.MENU_ORDER		AS MENU_ORDER											/* ORDER BY 순서*/
	                    , A.MENU_DC			AS MENU_DC												/* 메뉴 설명*/
	                    , A.MENU_LEVEL  AS MENU_LEVEL												/* 메뉴 LEVEL*/
				  FROM DC_MENU A
	         LEFT JOIN DC_MENU_AUTH B
                    ON A.MENU_CD = B.MENU_CD   ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
        	<![CDATA[	 A.USE_YN='Y'             
					AND  B.READ_YN='Y' 
					START WITH A.MENU_LEVEL=1
					CONNECT BY PRIOR
 					A.MENU_CD = DECODE(B.MENU_CD, A.UPPER_MENU_CD, NULL, A.UPPER_MENU_CD)
 					ORDER BY A.MENU_CD ASC
			]]>
		</trim>			
    </select>

	<select id="selectMainImgList" parameterType="mainImgRequest"	resultType="mainImgResponse">
		<![CDATA[
				SELECT
						  IFNULL(MI_IDX, '') AS MI_IDX
						 ,IFNULL(MI_IMG_IDX, '') AS MI_IMG_IDX
						 ,IFNULL(DATE_FORMAT(MI_START_DT, '%Y-%m-%d'), '') AS MI_START_DT
						 ,IFNULL(DATE_FORMAT(MI_END_DT, '%Y-%m-%d'), '') AS MI_END_DT
						 ,IFNULL(MI_TITLE, '') AS MI_TITLE
						 ,IFNULL(REG_ID, '') AS REG_ID
						 ,IFNULL(DATE_FORMAT(REG_DT , '%Y-%m-%d'), '') AS REG_DT
						 ,IFNULL(MOD_ID, '') AS MOD_ID
						 ,IFNULL(MOD_DT, '') AS MOD_DT
				  FROM DC_MAIN_IMG  ]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="miIdx != null and miIdx != ''">
				<![CDATA[ AND MI_IDX = #{miIdx} ]]>
			</if>
		</trim>
	</select>

	<insert id="insertMainImg" parameterType="mainImgRequest">
		<![CDATA[
       INSERT INTO DC_MAIN_IMG(
           MI_TITLE
         , MI_START_DT
         , MI_END_DT
         , REG_ID
         , REG_DT
       )VALUES (
          #{miTitle}
          , #{miStartDt}
          , #{miEndDt}
          , #{regId}
          , NOW()
      )
      ]]>
		<selectKey keyProperty="miIdx" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>

	</insert>

	<update id="updateMainImg" parameterType="mainImgRequest">
		<![CDATA[ UPDATE DC_MAIN_IMG ]]>
		<trim prefix="SET" suffixOverrides=",">
			<if test="miTitle      != null"><![CDATA[   MI_TITLE          = #{miTitle}  ,      ]]></if>    <!-- miTitle -->
			<if test="miStartDt    != null"><![CDATA[   MI_START_DT       = #{miStartDt}  ,      ]]></if>    <!-- miStartDt -->
			<if test="miEndDt      != null"><![CDATA[   MI_END_DT         = #{miEndDt}  ,      ]]></if>    <!-- miEndDt -->
			<if test="miImgIdx      != null"><![CDATA[   MI_IMG_IDX         = #{miImgIdx}  ,      ]]></if>    <!-- miImgIdx -->
			<if test="modId        != null"><![CDATA[   MOD_ID            = #{modId}  ,      ]]></if>    <!-- modId -->
			MOD_DT = NOW()
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="miIdx != null and miIdx != ''">
				<![CDATA[ MI_IDX = #{miIdx} ]]>
			</if>
		</trim>
	</update>

	<delete id="deleteMainImg" parameterType="mainImgRequest">
           <![CDATA[ DELETE FROM DC_MAIN_IMG WHERE MI_IDX = #{miIdx} ]]>
    </delete>

	<select id="selectQuestionList" parameterType="questionRequest"	resultType="questionResponse">
		<![CDATA[
				SELECT
						  IFNULL(QU_IDX, '') AS QU_IDX
						 ,IFNULL(QU_TITLE, '') AS QU_TITLE
						 ,IFNULL(QU_CONTENTS, '') AS QU_CONTENTS
						 ,(SELECT USER_ID FROM DC_USER_INFO WHERE UR_IDX = QUESTIONER_ID) AS QUESTIONER_ID
						 ,IFNULL(QUESTIONER_PHONE, '') AS QUESTIONER_PHONE
						 ,IFNULL(QUESTION_DT, '') AS QUESTION_DT
						 ,IFNULL(QU_ANSWER, '') AS QU_ANSWER
						 ,IFNULL(QU_ANSWER_YN, '') AS QU_ANSWER_YN
						 ,IFNULL(ANSWERER_ID, '') AS ANSWERER_ID
						 ,IFNULL(ANSWER_DT, '') AS ANSWER_DT
						 ,IFNULL(IMG_IDX, '') AS IMG_IDX
				  FROM DC_QUESTION  ]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="quIdx != null and quIdx != ''">
				<![CDATA[ AND QU_IDX = #{quIdx} ]]>
			</if>
		</trim>
	</select>

	<select id="selectNoticeList" parameterType="noticeRequest"	resultType="noticeResponse">
		<![CDATA[
				SELECT
						  IFNULL(NT_IDX, '') AS NT_IDX
						 ,IFNULL(NT_TITLE, '') AS NT_TITLE
						 ,IFNULL(NT_CONTENT, '') AS NT_CONTENT
						 ,IFNULL(IMG_IDX, '') AS IMG_IDX
						 ,(SELECT USER_ID FROM DC_USER_INFO WHERE UR_IDX = REG_ID) AS REG_ID
						 ,IFNULL(REG_DT, '') AS REG_DT
						 ,IFNULL(MOD_ID, '') AS MOD_ID
						 ,IFNULL(MOD_DT, '') AS MOD_DT
				  FROM DC_NOTICE  ]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="ntIdx != null and ntIdx != ''">
				<![CDATA[ AND NT_IDX = #{ntIdx} ]]>
			</if>
		</trim>
	</select>

	<update id="updateAnswer" parameterType="questionRequest">
		<![CDATA[ UPDATE DC_QUESTION ]]>
		<trim prefix="SET" suffixOverrides=",">
			<if test="quAnswer      != null"><![CDATA[   QU_ANSWER          = #{quAnswer}  ,      ]]></if>    <!-- quAnswer -->
			<if test="quAnswerYn      != null"><![CDATA[   QU_ANSWER_YN          = #{quAnswerYn}  ,      ]]></if>    <!-- quAnswerYn -->
			<if test="answererId      != null"><![CDATA[   ANSWERER_ID          = #{answererId}  ,      ]]></if>    <!-- answererId -->
			<if test="answerDt      != null"><![CDATA[   ANSWER_DT          = #{answerDt}  ,      ]]></if>    <!-- answerDt -->
			<if test="imgIdx      != null"><![CDATA[   IMG_IDX          = #{imgIdx}  ,      ]]></if>    <!-- answerDt -->
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="quIdx != null and quIdx != ''">
				<![CDATA[ QU_IDX = #{quIdx} ]]>
			</if>
		</trim>
	</update>

	<insert id="insertNotice" parameterType="noticeRequest">
		<![CDATA[
       INSERT INTO DC_NOTICE(
           NT_TITLE
         , NT_CONTENT
         , REG_ID
         , REG_DT
       )VALUES (
          #{ntTitle}
          , #{ntContent}
          , #{regId}
          , NOW()
      )
      ]]>
		<selectKey keyProperty="ntIdx" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>

    </insert>

	<update id="updateNotice" parameterType="noticeRequest">
		<![CDATA[ UPDATE DC_NOTICE ]]>
		<trim prefix="SET" suffixOverrides=",">
			<if test="ntTitle      != null"><![CDATA[   NT_TITLE          = #{ntTitle}  ,      ]]></if>    <!-- ntTitle -->
			<if test="ntContent      != null"><![CDATA[   NT_CONTENT          = #{ntContent}  ,      ]]></if>    <!-- ntContent -->
			<if test="modId      != null"><![CDATA[   MOD_ID          = #{modId}  ,      ]]></if>    <!-- modId -->
			<if test="imgIdx      != null"><![CDATA[   IMG_IDX          = #{imgIdx}  ,      ]]></if>    <!-- modId -->
			MOD_DT = NOW()
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="ntIdx != null and ntIdx != ''">
				<![CDATA[ NT_IDX = #{ntIdx} ]]>
			</if>
		</trim>
	</update>

	<delete id="deleteNotice" parameterType="noticeRequest">
           <![CDATA[ DELETE FROM DC_NOTICE WHERE NT_IDX = #{ntIdx} ]]>
    </delete>

</mapper>

    
    